## rev-parse --absolute-git-dir

    /home/st/REPOBARE/_repo/Book/.git

## git rev-parse --show-toplevel

    /home/st/REPOBARE/_repo/Book

## git config --list 

    tail: 

    user.email=legioner9@inbox.ru
    user.name=[alt]legioner9
    core.editor=gvim -v
    safe.directory=${COMMUNIS_PATH}
    safe.directory=${COMMUNIS_PATH}
    core.repositoryformatversion=0
    core.filemode=true
    core.bare=false
    core.logallrefupdates=true
    remote.origin.url=git@github.com:legioner9/NBash.git
    remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
    branch.master.remote=origin
    branch.master.merge=refs/heads/master
    remote.GITHUB_LEGIONER9_NBash.url=git@github.com:legioner9/NBash.git
    remote.GITHUB_LEGIONER9_NBash.fetch=+refs/heads/*:refs/remotes/GITHUB_LEGIONER9_NBash/*
    remote.HOME_REPOBARE_BARE_NBash.url=/home/st/REPOBARE/_bare/NBash
    remote.HOME_REPOBARE_BARE_NBash.fetch=+refs/heads/*:refs/remotes/HOME_REPOBARE_BARE_NBash/*
    remote.MY_ONE_REPOBARE_BARE_NBash.url=/run/media/st/MY_ONE/REPOBARE/_bare/NBash
    remote.MY_ONE_REPOBARE_BARE_NBash.fetch=+refs/heads/*:refs/remotes/MY_ONE_REPOBARE_BARE_NBash/*
    remote.TOSHIBA_EXT_REPOBARE_BARE_NBash.url=/run/media/st/TOSHIBA_EXT/REPOBARE/_bare/NBash
    remote.TOSHIBA_EXT_REPOBARE_BARE_NBash.fetch=+refs/heads/*:refs/remotes/TOSHIBA_EXT_REPOBARE_BARE_NBash/*
    remote.TOSH_REPOBARE_BARE_NBash.url=/run/media/st/TOSH/REPOBARE/_bare/NBash
    remote.TOSH_REPOBARE_BARE_NBash.fetch=+refs/heads/*:refs/remotes/TOSH_REPOBARE_BARE_NBash/*
    remote.GITFLIC_LEGIONER9_NBash.url=git@gitflic.ru:legioner9/nbash.git
    remote.GITFLIC_LEGIONER9_NBash.fetch=+refs/heads/*:refs/remotes/GITFLIC_LEGIONER9_NBash/*
    remote.GITVERSE_LEGIONER9_NBash.url=ssh://git@gitverse.ru:2222/legioner9/NBash.git
    remote.GITVERSE_LEGIONER9_NBash.fetch=+refs/heads/*:refs/remotes/GITVERSE_LEGIONER9_NBash/*

## git remote -v

    GITFLIC_LEGIONER9_Book  git@gitflic.ru:legioner9/book.git (fetch)
    GITFLIC_LEGIONER9_Book  git@gitflic.ru:legioner9/book.git (push)
    GITHUB_LEGIONER9_Book   git@github.com:legioner9/Book.git (fetch)
    GITHUB_LEGIONER9_Book   git@github.com:legioner9/Book.git (push)
    HOME_REPOBARE_BARE_Book /home/st/REPOBARE/_bare/Book (fetch)
    HOME_REPOBARE_BARE_Book /home/st/REPOBARE/_bare/Book (push)
    MY_ONE_REPOBARE_BARE_Book       /run/media/st/MY_ONE/REPOBARE/_bare/Book (fetch)
    MY_ONE_REPOBARE_BARE_Book       /run/media/st/MY_ONE/REPOBARE/_bare/Book (push)
    TOSHIBA_EXT_REPOBARE_BARE_Book  /run/media/st/TOSHIBA_EXT/REPOBARE/_bare/Book (fetch)
    TOSHIBA_EXT_REPOBARE_BARE_Book  /run/media/st/TOSHIBA_EXT/REPOBARE/_bare/Book (push)
    TOSH_REPOBARE_BARE_Book /run/media/st/TOSH/REPOBARE/_bare/Book (fetch)
    TOSH_REPOBARE_BARE_Book /run/media/st/TOSH/REPOBARE/_bare/Book (push)
    origin  git@github.com:legioner9/Book.git (fetch)
    origin  git@github.com:legioner9/Book.git (push)

## git rev-parse --git-path hooks/commit-msg (relativ path to hooks/commit-msg)

    ../../.git/hooks/commit-msg

## git --exec-path

    /usr/libexec/git-core

## git config

    usage: git config [<options>]

    Config file location
        --global              use global config file
        --system              use system config file
        --local               use repository config file
        --worktree            use per-worktree config file
        -f, --file <file>     use given config file
        --blob <blob-id>      read config from given blob object

    Action
        --get                 get value: name [value-pattern]
        --get-all             get all values: key [value-pattern]
        --get-regexp          get values for regexp: name-regex [value-pattern]
        --get-urlmatch        get value specific for the URL: section[.var] URL
        --replace-all         replace all matching variables: name value [value-pattern]
        --add                 add a new variable: name value
        --unset               remove a variable: name [value-pattern]
        --unset-all           remove all matches: name [value-pattern]
        --rename-section      rename section: old-name new-name
        --remove-section      remove a section: name
        -l, --list            list all
        --fixed-value         use string equality when comparing values to 'value-pattern'
        -e, --edit            open an editor
        --get-color           find the color configured: slot [default]
        --get-colorbool       find the color setting: slot [stdout-is-tty]

    Type
        -t, --type <>         value is given this type
        --bool                value is "true" or "false"
        --int                 value is decimal number
        --bool-or-int         value is --bool or --int
        --bool-or-str         value is --bool or string
        --path                value is a path (file or directory name)
        --expiry-date         value is an expiry date

    Other
        -z, --null            terminate values with NUL byte
        --name-only           show variable names only
        --includes            respect include directives on lookup
        --show-origin         show origin of config (file, standard input, blob, command line)
        --show-scope          show scope of config (worktree, local, global, system, command)
        --default <value>     with --get, use default value when missing entry

## git var -l

    user.email=legioner9@inbox.ru
    user.name=[alt]legioner9
    core.editor=gvim -v
    safe.directory=${COMMUNIS_PATH}
    safe.directory=${COMMUNIS_PATH}
    GIT_COMMITTER_IDENT=[alt]legioner9 <legioner9@inbox.ru> 1715414750 +0700
    GIT_AUTHOR_IDENT=[alt]legioner9 <legioner9@inbox.ru> 1715414750 +0700
    GIT_EDITOR=gvim -v
    GIT_PAGER=less -RS