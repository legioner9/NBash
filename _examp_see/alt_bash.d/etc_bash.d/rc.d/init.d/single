#!/bin/sh
#
# rc.single     This file is executed by init when it goes into runlevel
#               1, which is the administrative state. It kills all
#               daemons and then puts the system into single user mode.
#               Note that the file systems are kept mounted.
#
# Author:       Miquel van Smoorenburg, <miquels@drinkel.nl.mugnet.org>
#               Modified for RHS Linux by Damien Neil
#

WITHOUT_RC_COMPAT=1

# Source function library.
. /etc/init.d/functions

if [ "$1" != start ]; then
	exit 0
fi

# Kill all processes.
[ "${BASH+bash}" = bash ] && enable kill

echo "Sending all processes the TERM signal..."
kill -15 -1
sleep 5
echo "Sending all processes the KILL signal.."
kill -9 -1

rm -f /var/lock/subsys/*

# make sure modprobe is working
if [ -f /proc/sys/kernel/modprobe ]; then
	sysctl -w kernel.modprobe="/sbin/modprobe" >/dev/null 2>&1
fi

# If they want to run something in single user mode, might as well run it...
for i in /etc/rc.d/rc1.d/S[0-9][0-9]*; do
	# Check if the script is there.
	[ -x "$i" ] || continue

	# Don't run *.rpm* and *~ scripts
	[ -n "${i##*.rpm*}" ] && [ -n "${i##*\~}" ] || continue

	[ "$i" != "/etc/rc.d/rc1.d/S00single" ] || continue

	"$i" start
done

# Now go to the single user level.
echo "Telling INIT to go to single user mode."
telinit -t1 S
