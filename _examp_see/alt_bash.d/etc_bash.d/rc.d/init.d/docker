#!/bin/sh
#
# docker	Docker container management daemon
#
# chkconfig: - 90 10
# description:	Docker container management daemon
# processname: docker
# config: /etc/docker.conf
# pidfile: /var/run/docker.pid
### BEGIN INIT INFO
# Provides: docker
# Required-Start: network
# Defalt-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Description: Docker container management daemon
### END INIT INFO

# Do not load RH compatibility interface.
WITHOUT_RC_COMPAT=1

# Source function library.
. /etc/init.d/functions

SourceIfNotEmpty /etc/sysconfig/docker
SourceIfNotEmpty /etc/sysconfig/docker-storage

PIDFILE=/var/run/docker.pid
LOCKFILE=/var/lock/subsys/docker
CONTAINERD_LOCKFILE=/var/lock/subsys/containerd
CONTAINERD_SOCK=/run/containerd/containerd.sock
RETVAL=0

mount_cgroups()
{
	mount | grep -q ^cgroup || mount -t cgroup cgroup /sys/fs/cgroup
}

start()
{
	mount_cgroups
	sysctl -w net.ipv4.ip_forward=1 net.ipv6.conf.all.forwarding=1
	service containerd start
	start_daemon --background --pidfile "$PIDFILE" --lockfile "$LOCKFILE" --expect-user root -- dockerd \
	   --containerd "$CONTAINERD_SOCK" \
		$OPTIONS \
		$DOCKER_STORAGE_OPTIONS
	RETVAL=$?
	return $RETVAL
}

stop()
{
	stop_daemon --pidfile "$PIDFILE" --lockfile "$LOCKFILE" --expect-user root --retry 60 -- dockerd
	service containerd stop
	RETVAL=$?
	return $RETVAL
}

restart()
{
	stop
	start
}

# See how we were called.
case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart|reload)
		restart
		;;
	condstop)
		if [ -e "$LOCKFILE" ]; then
			stop
		fi
		;;
	condrestart)
		if [ -e "$LOCKFILE" ]; then
			restart
		fi
		;;
	condreload)
		if [ -e "$LOCKFILE" ]; then
			reload
		fi
		;;
	status)
		docker version
		RETVAL=$?
		;;
	*)
		msg_usage "${0##*/} {start|stop|reload|restart|condstop|condrestart|condreload|status}"
		RETVAL=1
esac

exit $RETVAL
